{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactListItem/ContactListItem.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","fetchContacts","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","message","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getValue","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useDispatch","useEffect","contactsOperations","useSelector","contactsSelectors","handleChange","event","target","value","reset","className","s","formContainer","formTitle","Form","onSubmit","e","preventDefault","some","alert","Group","controlId","Label","Control","type","placeholder","onChange","Text","Button","variant","ContactListItem","onDeleteContact","id","contactListItem","onClick","ContactList","contactList","TransitionGroup","map","CSSTransition","timeout","classNames","Filter","filterContainer","filterLabel","filterInput","contactsActions","changeFilter","ContactsView"],"mappings":"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","file":"static/js/3.3a0321ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ContactForm_formContainer__r_I_s\",\"formTitle\":\"ContactForm_formTitle__2hrsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__OXN3r\",\"contact\":\"ContactListItem_contact__3hWz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__NFCz_\",\"enter\":\"ContactList_enter__14d0H\",\"enterActive\":\"ContactList_enterActive__1Kdsz\",\"exit\":\"ContactList_exit__2XZvM\",\"exitActive\":\"ContactList_exitActive__a8atm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2_cu2\",\"filterLabel\":\"Filter_filterLabel__1VMVF\",\"filterInput\":\"Filter_filterInput__3KWSU\"};","import axios from \"axios\";\r\nimport {\r\n    addContactRequest, \r\n    addContactSuccess, \r\n    addContactError, \r\n    deleteContactRequest, \r\n    deleteContactSuccess, \r\n    deleteContactError,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n} from \"./contacts-actions\";\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    axios.get('/contacts')\r\n    .then(({data}) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n    .post('/contacts', contact)\r\n    .then(({data}) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios.delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n}","export const getContacts = state => state.contacts.items;\r\nexport const getValue = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getValue(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n  \r\n    return contacts.filter(({name}) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};","import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n\r\n  const handleChange = event => {\r\n    switch (event.target.name) {\r\n      case 'name':\r\n        setName(event.target.value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(event.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const identicalName = contacts.some(contact => {\r\n      return contact.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n\r\n    if (identicalName) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div className={s.formContainer}>\r\n      <h2 className={s.formTitle}>Phonebook</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Text className=\"text-muted\"></Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Namber</Form.Label>\r\n          <Form.Control\r\n            type=\"namber\"\r\n            placeholder=\"Number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"danger\" type=\"submit\">\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import propTypes from 'prop-types';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contact, number, onDeleteContact, id }) => {\r\n  return (\r\n    <li className={s.contactListItem}>\r\n      <p className={s.contact}>\r\n        {contact}: {number}\r\n      </p>\r\n\r\n      <Button variant=\"danger\" onClick={() => onDeleteContact(id)}>Delete</Button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: propTypes.string.isRequired,\r\n  number: propTypes.string.isRequired,\r\n  id: propTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import { useSelector, useDispatch } from 'react-redux';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <ul className={s.contactList}>\r\n        <TransitionGroup>\r\n        {contacts.map(({ name, id, number }) => (\r\n            <CSSTransition  \r\n            key={id}\r\n            timeout={250}\r\n            classNames={s}>\r\n            <ContactListItem\r\n              contact={name}\r\n              number={number}\r\n              key={id}\r\n              onDeleteContact={() =>\r\n                dispatch(contactsOperations.deleteContact(id))\r\n              }\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n        </TransitionGroup>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsActions, contactsSelectors } from './../../redux/contacts';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(contactsSelectors.getValue);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.filterContainer}>\r\n      <label className={s.filterLabel}>\r\n        Find contact\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import ContactForm from './../Components/ContactForm/ContactForm';\r\nimport ContactList from './../Components/ContactList/ContactList';\r\nimport Filter from './../Components/Filter/Filter';\r\n\r\nexport default function ContactsView() {\r\n  return (\r\n    <>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}