{"version":3,"sources":["redux/auth/auth-selectors.js","redux/contacts/contacts-actions.js","redux/auth/auth-operations.js","Components/AppBar/AppBar.module.css","Components/PrivateRoute.js","Components/PublicRoute.js","Components/AppBar/AuthNav.js","Components/AppBar/UserMenu.js","Components/AppBar/Navigation.js","Components/AppBar/AppBar.js","Components/App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["getIsLoggedIn","state","auth","isLoggedIn","getUsername","user","name","getIsFetchingCurrent","isFetchingCurrentUser","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","fetchCurrentUser","_","thunkApi","getState","persistedToken","rejectWithValue","get","module","exports","PrivateRoute","children","redirectTo","routeProps","useSelector","authSelectors","to","PublicRoute","restricted","shoulRedirect","AuthNav","Nav","variant","defaultActiveKey","Item","Link","href","UserMenu","dispatch","useDispatch","Button","type","onClick","authOperations","Navigation","AppBar","CSSTransition","in","appear","timeout","classNames","s","header","unmountOnExit","className","RegisterView","lazy","LoginView","ContactsView","HomePageView","App","useEffect","Spinner","animation","fallback","path","exact","items","createReducer","payload","filter","contact","id","loading","combineReducers","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","pending","rejected","middleware","getDefaultMiddleware","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34ef04fd.chunk.js","sourcesContent":["export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getUsername = state => state.auth.user.name;\r\nexport const getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\n\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nexport const register = createAsyncThunk('auth/register', async credentials => {\r\n    try {\r\n        const {data} = await axios.post('/users/signup', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n        \r\n    }\r\n});\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async credentials => {\r\n    try {\r\n        const {data} = await axios.post('/users/login', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n});\r\n\r\nexport const logOut = createAsyncThunk('auth/logout', async () => {\r\n    try {\r\n        await axios.post('users/logout');\r\n        token.unset();\r\n    } catch (error) {\r\n\r\n    }\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkApi) => {\r\n    const state = thunkApi.getState();\r\n    const persistedToken = state.auth.token;\r\n    if(persistedToken === null) {\r\n        return thunkApi.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n        const {data} = await axios.get('/users/current');\r\n        return data;\r\n    } catch (error) {\r\n        \r\n    }\r\n})\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__e5kMh\",\"header-appear\":\"AppBar_header-appear__23mEN\",\"header-appear-active\":\"AppBar_header-appear-active__2TjKj\"};","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from './../redux/auth';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = \"/login\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from './../redux/auth';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = \"/contacts\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shoulRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shoulRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import Nav from 'react-bootstrap/Nav';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <Nav variant=\"tabs\" defaultActiveKey=\"/\">\r\n          <Nav.Item>\r\n            <Nav.Link href=\"/register\">Sign up</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link href=\"/login\">LogIn</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n\r\n  return (\r\n    <div>\r\n      <span>Welcome, {name} </span>\r\n\r\n      <Button\r\n        variant=\"primary\"\r\n        type=\"button\"\r\n        onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Log out\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <div>\r\n\r\n      <Nav variant=\"tabs\" defaultActiveKey=\"/\">\r\n        <Nav.Item>\r\n          <Nav.Link href=\"/\">Home Page</Nav.Link>\r\n        </Nav.Item>\r\n        {isLoggedIn && (\r\n          <Nav.Item>\r\n            <Nav.Link href=\"/contacts\">Contacts</Nav.Link>\r\n          </Nav.Item>\r\n        )}\r\n      </Nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport AuthNav from './AuthNav';\r\nimport UserMenu from './UserMenu';\r\nimport Navigation from \"./Navigation\";\r\nimport { authSelectors } from './../../redux/auth';\r\n\r\nimport s from \"./AppBar.module.css\";\r\n\r\nexport default function AppBar () {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n     <CSSTransition \r\n      in={true} \r\n      appear={true} \r\n      timeout={500} \r\n      classNames={s.header} \r\n      unmountOnExit\r\n     > \r\n     <>\r\n        <header className={s.header}>\r\n          <Navigation />\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n        <hr/>\r\n        </>\r\n      </CSSTransition>\r\n  );\r\n};\r\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport Spinner from 'react-bootstrap/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport AppBar from './AppBar/AppBar';\nimport { authOperations, authSelectors } from './../redux/auth';\n\n\nconst RegisterView = lazy(() => import('../views/RegisterView/RegisterView'));\nconst LoginView = lazy(() => import('../views/LoginView/LoginView'));\nconst ContactsView = lazy(() => import('../views/ContactsView'));\nconst HomePageView = lazy(() => import('../views/HomePageView/HomePageView'));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isFetchingCurrentUser ? (\n        <Spinner animation=\"grow\" />\n      ) : (\n        <>\n          <AppBar />\n\n          <Switch>\n            <Suspense\n              fallback={\n                <Spinner animation=\"grow\" />\n              }\n            >\n              <PublicRoute path=\"/\" exact>\n                <HomePageView />\n              </PublicRoute>\n\n              <PublicRoute path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n\n              <PublicRoute path=\"/login\" restricted>\n                <LoginView />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\">\n                <ContactsView />\n              </PrivateRoute>\n            </Suspense>\n          </Switch>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addContactRequest, \r\n    addContactSuccess, \r\n    addContactError, \r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError, \r\n    changeFilter,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactsSuccess]: (state, {payload}) => payload,\r\n    [addContactSuccess]: (state, {payload}) => [payload, ...state],\r\n    [deleteContactSuccess]: (state, {payload}) => state.filter(contact => contact.id !== payload)\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false, \r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },    \r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport authReducer from \"./auth/auth-reducer\";\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n}; \r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './Components/App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}